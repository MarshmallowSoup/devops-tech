apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: datadog
  namespace: argocd
spec:
  project: devops
  destination:
    name: ''
    namespace: datadog
    server: 'https://kubernetes.default.svc'
  source:
    path: ''
    repoURL: 'https://helm.datadoghq.com'
    targetRevision: 3.33.3
    chart: datadog
    helm:
      values: |
        datadog:
          clusterName: devops
          apiKeyExistingSecret: datadog-api-key
          appKeyExistingSecret: datadog-app-key
          dd_url: https://app.datadoghq.com
          kubeStateMetricsCore:
            enabled: true
            rbac:
              create: true
            collectSecretMetrics: true
          clusterChecks:
            enabled: true
          collectEvents: true
          logs:
            enabled: true
            containerCollectAll: true
            containerCollectUsingFiles: true
          confd:
            argo.yaml: |-
              ad_identifiers:
                - argocd
              init_config:
              instances: 
                - api_server_endpoint: http://argocd-server-metrics:8083/metrics
        clusterAgent:
          enabled: true
          metricsProvider:
            enabled: true

  syncPolicy:
    automated: # automated sync by default retries failed attempts 5 times with following delays between attempts ( 5s, 10s, 20s, 40s, 80s ); retry controlled using `retry` field.
      prune: true # Specifies if resources should be pruned during auto-syncing ( false by default ).
      selfHeal: true # Specifies if partial app sync should be executed when resources are changed only in target Kubernetes cluster and no git change detected ( false by default ).

    syncOptions:     # Sync options which modifies sync behavior
    - Validate=true # enable resource validation (equivalent to 'kubectl apply --validate=false') ( true by default ).
    - CreateNamespace=true # Namespace Auto-Creation ensures that namespace specified as the application destination exists in the destination cluster.
  # The retry feature is available since v1.7
    retry:
      limit: 5 # number of failed sync attempt retries; unlimited number of attempts if less than 0
      backoff:
        duration: 5s # the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")
        factor: 2 # a factor to multiply the base duration after each failed retry
        maxDuration: 3m # the maximum amount of time allowed for the backoff strategy
